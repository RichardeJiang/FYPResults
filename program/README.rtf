{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Java:\
	DataPrepare.java: the Java code for preparing the raw texts data for DTM input; basically it\'92s dividing the dataset into different time slices, and counts the distinct words for every document. The computed data is also written into the file, in the format which is required by DTM.\
	XmlParser2.java: the Java code for interpreting the XML file.\
\
Python:\
	AuthorStats.py: building the general HITS model, used in Section 4.8.\
	regression.py: building the HITS model in different time slices, used in Section 4.9.\
	linearRegression.py: perform the linear regression analysis in Section 4.9.\
	XmlParser.py and XmlParser2.py: the two Python programs which interpret the raw XML files; same purposes as DataPrepare.java.\
	Parser.py: helper class for XmlParser.py and XmlParser2.py, defines how the data should be retrieved, including TextRank algorithm (Section 4.7 and 4.8), label matching (Section 4.6).\
	testNLTK.py: test code when getting familiar with NLTK library.\
	processGamma.py: the code to interpret the gamma.dat produced by DTM. Rarely used.\
	ProcessFlow:\
		processSoftware.py: code used to compute the phrase\'92s score for each year; the logic can be found in DTM package.\
		matchSoftware.py: code used to match the words (in String form) with the generated phrase score list (where phrases are represented using numbers).\
		sortDictSoftware.py: code used to sort the dictionary generated during the preparation.\
		plotSoftware.py: code used to plot out all the figures.}